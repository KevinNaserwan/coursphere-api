[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/06 - 21:46:04 | 200 |  115.041792ms |             ::1 | POST     "/api/v1/user/register"
[GIN] 2024/07/06 - 21:47:16 | 404 |      20.917µs |             ::1 | GET      "/api/v1/users"
[GIN] 2024/07/06 - 21:47:26 | 200 |   13.136291ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/06 - 21:48:34 | 200 |      3.9405ms |             ::1 | GET      "/api/v1/user/users/33b26128-550e-4aa2-a051-99a98ed60950"
[GIN] 2024/07/06 - 21:49:26 | 200 |      5.7295ms |             ::1 | PUT      "/api/v1/user/users/33b26128-550e-4aa2-a051-99a98ed60950"
[GIN] 2024/07/06 - 21:49:30 | 200 |     590.541µs |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/06 - 21:50:05 | 200 |    1.276959ms |             ::1 | DELETE   "/api/v1/user/users/33b26128-550e-4aa2-a051-99a98ed60950"
[GIN] 2024/07/06 - 21:50:08 | 200 |     572.458µs |             ::1 | GET      "/api/v1/user/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/06 - 22:33:42 | 400 |  117.527625ms |             ::1 | POST     "/api/v1/user/register"
Error #01: 400	Failed to insert user: ERROR: duplicate key value violates unique constraint "uni_users_email" (SQLSTATE 23505)
[GIN] 2024/07/06 - 22:33:59 | 200 |  5.345199708s |             ::1 | POST     "/api/v1/user/register"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/06 - 22:48:11 | 400 |  129.467209ms |             ::1 | POST     "/api/v1/user/register"
Error #01: 400	Failed to insert user: ERROR: duplicate key value violates unique constraint "uni_users_username" (SQLSTATE 23505)
[GIN] 2024/07/06 - 22:48:16 | 400 |   111.40425ms |             ::1 | POST     "/api/v1/user/register"
Error #01: 400	Failed to insert user: ERROR: duplicate key value violates unique constraint "uni_users_username" (SQLSTATE 23505)
[GIN] 2024/07/06 - 22:48:26 | 200 |  3.139352542s |             ::1 | POST     "/api/v1/user/register"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/06 - 23:16:25 | 200 |    2.664208ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/06 - 23:17:28 | 400 |     114.917µs |             ::1 | POST     "/api/v1/user/resend-otp"
[GIN] 2024/07/06 - 23:17:53 | 200 |  2.871305583s |             ::1 | POST     "/api/v1/user/resend-otp?email=naserwankevin@gmail.com"
[GIN] 2024/07/06 - 23:18:31 | 200 |  2.725155291s |             ::1 | POST     "/api/v1/user/resend-otp?email=naserwankevin@gmail.com"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/06 - 23:38:26 | 200 |   10.293875ms |             ::1 | POST     "/api/v1/user/verify-otp"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/14 - 16:40:46 | 200 |   33.535417ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 16:42:03 | 400 |   13.413542ms |             ::1 | GET      "/api/v1/user/users/33b26128-550e-4aa2-a051-99a98ed60950"
Error #01: 400	Failed to get user: 404	User not found: record not found
[GIN] 2024/07/14 - 16:42:30 | 200 |    1.013459ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 16:52:21 | 200 |    5.143542ms |             ::1 | GET      "/"
[GIN] 2024/07/14 - 16:53:02 | 404 |       2.459µs |             ::1 | GET      "/api/v1"
[GIN] 2024/07/14 - 16:53:09 | 404 |       1.667µs |             ::1 | GET      "/api/v1"
[GIN] 2024/07/14 - 16:53:14 | 200 |      67.042µs |             ::1 | GET      "/"
[GIN] 2024/07/14 - 16:53:17 | 200 |      24.916µs |             ::1 | GET      "/"
[GIN] 2024/07/14 - 16:53:20 | 200 |   14.501916ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 16:56:37 | 200 |    16.27225ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 16:56:40 | 200 |     516.875µs |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 16:56:43 | 200 |    1.189292ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:06:29 | 200 |   25.845292ms |             ::1 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/14 - 17:09:57 | 200 |       329.5µs |  125.167.49.173 | GET      "/"
[GIN] 2024/07/14 - 17:10:01 | 200 |      25.167µs |  125.167.49.173 | GET      "/"
[GIN] 2024/07/14 - 17:10:41 | 200 |   27.240084ms |             ::1 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:11:06 | 200 |      1.4255ms |  125.167.49.173 | GET      "/"
[GIN] 2024/07/14 - 17:11:08 | 200 |      17.916µs |  125.167.49.173 | GET      "/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/14 - 17:17:53 | 404 |     216.916µs |  125.167.49.173 | GET      "/api/v1"
[GIN] 2024/07/14 - 17:18:01 | 200 |   24.001833ms |  125.167.49.173 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:18:08 | 200 |   10.820333ms |  125.167.49.173 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:23:28 | 200 |   16.831959ms |  125.167.49.173 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:23:54 | 200 |    1.825834ms |  125.167.49.173 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:24:03 | 200 |     450.625µs |  125.167.49.173 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:24:07 | 200 |    5.387125ms |  125.167.49.173 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:24:12 | 404 |       2.833µs |  125.167.49.173 | PUT      "/api/v1/user/1"
[GIN] 2024/07/14 - 17:25:24 | 200 |    1.562417ms |             ::1 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:26:02 | 404 |       3.083µs |  125.167.49.173 | PUT      "/api/v1/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:26:29 | 404 |           3µs |  125.167.49.173 | PUT      "/api/v1/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:26:57 | 400 |    8.441625ms |             ::1 | PUT      "/api/v1/user/users/33b26128-550e-4aa2-a051-99a98ed60950"
Error #01: 400	Failed to update user: 404	User not found: record not found
[GIN] 2024/07/14 - 17:27:08 | 500 |     9.60375ms |             ::1 | PUT      "/api/v1/user/users/be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:27:11 | 200 |   15.507167ms |             ::1 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:27:15 | 200 |    1.045084ms |             ::1 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:27:20 | 500 |    2.008166ms |             ::1 | PUT      "/api/v1/user/users/be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:27:27 | 500 |    1.778208ms |             ::1 | PUT      "/api/v1/user/users/be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:28:01 | 400 |   18.782834ms |             ::1 | PUT      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
Error #01: 400	Failed to update user: 400	Failed to update user: ERROR: duplicate key value violates unique constraint "uni_users_username" (SQLSTATE 23505)
[GIN] 2024/07/14 - 17:28:10 | 200 |      12.877ms |             ::1 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:28:16 | 200 |    6.276708ms |             ::1 | PUT      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:28:19 | 200 |     414.125µs |             ::1 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:29:16 | 200 |    4.594916ms |  125.167.49.173 | PUT      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:29:20 | 200 |     877.208µs |             ::1 | GET      "/api/v1/user/users/4be02694-60b7-4960-ad5c-db9c8e6f0139"
[GIN] 2024/07/14 - 17:29:57 | 404 |       6.125µs |  125.167.49.173 | POST     "/api/v1/user/user/create"
[GIN] 2024/07/14 - 17:30:20 | 200 |  6.778225958s |  125.167.49.173 | POST     "/api/v1/user/register"
[GIN] 2024/07/14 - 17:30:30 | 200 |    1.761458ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:30:54 | 200 |    6.609084ms |  125.167.49.173 | DELETE   "/api/v1/user/users/787f02ab-4a6e-4d2f-929f-e9181a4944fa"
[GIN] 2024/07/14 - 17:30:56 | 200 |    1.119166ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:31:26 | 200 |  5.119131334s |  125.167.49.173 | POST     "/api/v1/user/register"
[GIN] 2024/07/14 - 17:31:57 | 200 |  1.738319375s |  125.167.49.173 | POST     "/api/v1/user/register"
[GIN] 2024/07/14 - 17:32:40 | 200 |   14.836375ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:32:52 | 200 |       2.862ms |  125.167.49.173 | DELETE   "/api/v1/user/users/7398c7c4-636e-4b9d-87fd-013b46e96ebc"
[GIN] 2024/07/14 - 17:32:58 | 400 |   80.391666ms |  125.167.49.173 | POST     "/api/v1/user/register"
Error #01: 400	Failed to insert user: ERROR: duplicate key value violates unique constraint "uni_users_username" (SQLSTATE 23505)
[GIN] 2024/07/14 - 17:57:23 | 400 |    90.53575ms |  125.167.49.173 | POST     "/api/v1/user/register"
Error #01: 400	Email already exists
[GIN] 2024/07/14 - 17:57:23 | 400 |  102.162958ms |  125.167.49.173 | POST     "/api/v1/user/register"
Error #01: 400	Email already exists
[GIN] 2024/07/14 - 17:57:41 | 400 |    107.2525ms |  125.167.49.173 | POST     "/api/v1/user/register"
Error #01: 400	Email already exists
[GIN] 2024/07/14 - 17:57:56 | 200 |    2.053625ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/14 - 17:58:13 | 400 |   87.610084ms |  125.167.49.173 | POST     "/api/v1/user/register"
Error #01: 400	Failed to insert user: ERROR: duplicate key value violates unique constraint "uni_users_email" (SQLSTATE 23505)
[GIN] 2024/07/14 - 17:58:23 | 400 |  110.648625ms |  125.167.49.173 | POST     "/api/v1/user/register"
Error #01: 400	Failed to insert user: ERROR: duplicate key value violates unique constraint "uni_users_email" (SQLSTATE 23505)
[GIN] 2024/07/14 - 18:02:15 | 200 |  3.525381958s |  125.167.49.173 | POST     "/api/v1/user/register"
[GIN] 2024/07/14 - 18:13:10 | 401 |  133.995583ms |             ::1 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:17:11 | 401 |  130.847541ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:17:35 | 400 |     983.042µs |  125.167.49.173 | POST     "/api/v1/user/login"
[GIN] 2024/07/14 - 18:18:30 | 404 |    43.10025ms |             ::1 | POST     "/api/v1/user/login"
Error #01: 404	User not found: record not found
[GIN] 2024/07/14 - 18:19:07 | 200 |  119.142208ms |             ::1 | POST     "/api/v1/user/login"
[GIN] 2024/07/14 - 18:19:12 | 401 |   94.245416ms |             ::1 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:21:01 | 401 |  134.572167ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:21:49 | 404 |    7.101958ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 404	User not found: record not found
[GIN] 2024/07/14 - 18:22:04 | 404 |    1.740834ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 404	User not found: record not found
[GIN] 2024/07/14 - 18:22:08 | 200 |   109.36575ms |  125.167.49.173 | POST     "/api/v1/user/login"
[GIN] 2024/07/14 - 18:24:00 | 401 |  126.355458ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:26:21 | 401 |  111.548458ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:26:30 | 401 |   86.620625ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:27:41 | 400 |    6.930583ms |  125.167.49.173 | POST     "/api/v1/user/login"
[GIN] 2024/07/14 - 18:27:44 | 400 |     550.542µs |  125.167.49.173 | POST     "/api/v1/user/login"
[GIN] 2024/07/14 - 18:27:48 | 404 |   17.511417ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 404	User not found: record not found
[GIN] 2024/07/14 - 18:27:49 | 404 |    1.228125ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 404	User not found: record not found
[GIN] 2024/07/14 - 18:28:24 | 404 |   43.857791ms |             ::1 | POST     "/api/v1/user/login"
Error #01: 404	User not found: record not found
[GIN] 2024/07/14 - 18:28:56 | 401 |   92.111459ms |             ::1 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:31:23 | 401 |  106.548167ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:31:34 | 200 |   80.114875ms |  125.167.49.173 | POST     "/api/v1/user/login"
[GIN] 2024/07/14 - 18:32:59 | 200 |   87.197083ms |             ::1 | POST     "/api/v1/user/login"
[GIN] 2024/07/14 - 18:39:58 | 401 |  122.009375ms |  125.167.49.173 | POST     "/api/v1/user/login"
Error #01: 401	wrong credentials
[GIN] 2024/07/14 - 18:40:05 | 200 |  109.835625ms |  125.167.49.173 | POST     "/api/v1/user/login"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/15 - 22:39:08 | 400 |     483.125µs |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/15 - 22:39:58 | 400 |     332.083µs |             ::1 | POST     "/api/v1/book-category/create"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/15 - 22:40:14 | 200 |   19.714542ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/15 - 22:40:20 | 200 |    1.475834ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/15 - 22:40:24 | 200 |       1.637ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/15 - 22:40:30 | 200 |    1.657792ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/15 - 22:40:36 | 200 |    1.154416ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/15 - 22:40:40 | 200 |      1.1465ms |             ::1 | GET      "/api/v1/book-category/all"
[GIN] 2024/07/15 - 22:40:50 | 500 |    5.706458ms |             ::1 | GET      "/api/v1/book-category/5f90b5dc-55c1-4f7a-9c46-acff0acd3bfd"
[GIN] 2024/07/15 - 22:41:06 | 500 |     2.47575ms |             ::1 | GET      "/api/v1/book-category/5f90b5dc-55c1-4f7a-9c46-acff0acd3bfd"
[GIN] 2024/07/15 - 22:41:53 | 500 |    3.376917ms |             ::1 | GET      "/api/v1/book-category/c2298a56-b899-4e12-9c3c-1c245cfa4776"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/15 - 22:50:01 | 200 |      1.9765ms |             ::1 | GET      "/api/v1/book-category/all"
[GIN] 2024/07/15 - 22:50:14 | 200 |    2.778667ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/15 - 22:50:26 | 200 |     2.79175ms |             ::1 | GET      "/api/v1/user/users/04eafc81-0713-4b5d-a794-bd699681e26a"
[GIN] 2024/07/15 - 22:50:42 | 500 |    6.082333ms |             ::1 | GET      "/api/v1/book-category/5f90b5dc-55c1-4f7a-9c46-acff0acd3bfd"
[GIN] 2024/07/15 - 22:51:16 | 500 |    4.602625ms |             ::1 | GET      "/api/v1/book-category/04eafc81-0713-4b5d-a794-bd699681e26a"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/15 - 22:58:39 | 500 |      5.3975ms |             ::1 | GET      "/api/v1/book-category/04eafc81-0713-4b5d-a794-bd699681e26a"
[GIN] 2024/07/15 - 22:59:40 | 200 |    5.757458ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/15 - 22:59:43 | 200 |     890.042µs |             ::1 | GET      "/api/v1/book-category/all"
[GIN] 2024/07/15 - 22:59:51 | 500 |    6.397625ms |             ::1 | GET      "/api/v1/book-category/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN] 2024/07/15 - 23:08:18 | 500 |   11.221042ms |             ::1 | GET      "/api/v1/book-category/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/15 - 23:16:35 | 500 |    3.806917ms |             ::1 | GET      "/api/v1/book-category/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/bookCategory/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/15 - 23:17:21 | 200 |   12.513458ms |             ::1 | GET      "/api/v1/book-category/all"
[GIN] 2024/07/15 - 23:17:25 | 500 |    4.515208ms |             ::1 | GET      "/api/v1/book-category/bookCategory/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/15 - 23:18:37 | 404 |       1.583µs |             ::1 | GET      "/api/v1/book-category/bookCategory/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN] 2024/07/15 - 23:18:44 | 500 |      4.3055ms |             ::1 | GET      "/api/v1/book-category/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/15 - 23:20:28 | 200 |    2.411417ms |             ::1 | GET      "/api/v1/book-category/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN] 2024/07/15 - 23:20:55 | 200 |    1.154333ms |             ::1 | GET      "/api/v1/book-category/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/18 - 23:03:27 | 200 |     1.88825ms |             ::1 | GET      "/api/v1/user/users"
[GIN] 2024/07/18 - 23:03:34 | 404 |       1.459µs |             ::1 | GET      "/api/v1/book"
[GIN] 2024/07/18 - 23:03:38 | 404 |       1.541µs |             ::1 | GET      "/api/v1/book"
[GIN] 2024/07/18 - 23:03:49 | 200 |    2.297625ms |             ::1 | GET      "/api/v1/book-category/all"
[GIN] 2024/07/18 - 23:03:53 | 200 |    3.782208ms |             ::1 | GET      "/api/v1/book-category/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN] 2024/07/18 - 23:04:09 | 200 |    4.610625ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/18 - 23:04:13 | 200 |    1.452416ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/18 - 23:04:22 | 200 |    1.821542ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/18 - 23:04:27 | 200 |     579.334µs |             ::1 | GET      "/api/v1/book-category/all"
[GIN] 2024/07/18 - 23:05:19 | 200 |   21.121166ms |             ::1 | POST     "/api/v1/book-category/create"
[GIN] 2024/07/18 - 23:05:22 | 200 |    2.299792ms |             ::1 | GET      "/api/v1/book-category/a471a20d-9791-4c7e-8a9b-f6611cbfd45b"
[GIN] 2024/07/18 - 23:05:24 | 200 |     956.375µs |             ::1 | GET      "/api/v1/book-category/all"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/book         --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/book         --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/book/:id     --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/book/:id     --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/book/:id     --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/book         --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/book         --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/book/:id     --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/book/:id     --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/book/:id     --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/20 - 20:51:44 | 200 |   17.518333ms |             ::1 | GET      "/api/v1/book-category/all"
[GIN] 2024/07/20 - 20:51:55 | 200 |   17.367875ms |             ::1 | POST     "/api/v1/book/create"
[GIN] 2024/07/20 - 20:52:00 | 200 |    1.873583ms |             ::1 | GET      "/api/v1/book"
[GIN] 2024/07/20 - 20:54:30 | 200 |    5.749708ms |             ::1 | GET      "/api/v1/book/339cf763-8060-40b8-a3f3-382dfadb7e73"
[GIN] 2024/07/20 - 20:54:57 | 200 |    1.112125ms |             ::1 | GET      "/api/v1/book/339cf763-8060-40b8-a3f3-382dfadb7e73"
[GIN] 2024/07/20 - 20:58:13 | 200 |    18.85575ms |             ::1 | GET      "/api/v1/book"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/20 - 21:06:26 | 200 |    2.702458ms |             ::1 | GET      "/api/v1/book"
[GIN] 2024/07/20 - 21:09:18 | 200 |    2.369917ms |             ::1 | GET      "/api/v1/book"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 01:03:32 | 200 |    4.931166ms |             ::1 | GET      "/api/v1/book"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 01:14:49 | 200 |    2.368292ms |             ::1 | GET      "/api/v1/book"
[GIN] 2024/07/21 - 01:15:30 | 200 |    1.287375ms |             ::1 | GET      "/api/v1/book-category/all"
[GIN] 2024/07/21 - 01:15:44 | 404 |    3.634584ms |             ::1 | GET      "/api/v1/book?name=PHP"
Error #01: 404	Failed to get books: ERROR: column books.category_book_id does not exist (SQLSTATE 42703)
[GIN] 2024/07/21 - 01:17:47 | 404 |    2.064125ms |             ::1 | GET      "/api/v1/book?name=Dart"
Error #01: 404	Failed to get books: ERROR: column books.category_book_id does not exist (SQLSTATE 42703)
[GIN] 2024/07/21 - 01:19:40 | 200 |    4.401041ms |             ::1 | GET      "/api/v1/book?category_name=Dart"
[GIN] 2024/07/21 - 01:19:51 | 200 |    2.805125ms |             ::1 | GET      "/api/v1/book?category_name=PHP"
[GIN] 2024/07/21 - 01:20:01 | 200 |    1.565792ms |             ::1 | GET      "/api/v1/book?category_name=Javascript"
[GIN] 2024/07/21 - 01:20:07 | 200 |    1.505459ms |             ::1 | GET      "/api/v1/book"
[GIN] 2024/07/21 - 01:20:13 | 200 |    1.235625ms |             ::1 | GET      "/api/v1/book?category_name="
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 01:21:05 | 200 |    1.972417ms |             ::1 | GET      "/api/v1/book?category_name="
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 01:21:19 | 200 |    2.271875ms |             ::1 | GET      "/api/v1/book?category_name="
[GIN] 2024/07/21 - 01:21:26 | 200 |    2.306375ms |             ::1 | GET      "/api/v1/book?category_name=Dart"
[GIN] 2024/07/21 - 01:21:36 | 200 |   12.841042ms |             ::1 | GET      "/api/v1/book?category_name=Javascript"
[GIN] 2024/07/21 - 01:21:43 | 200 |     774.459µs |             ::1 | GET      "/api/v1/book?category_name=PHP"
[GIN] 2024/07/21 - 01:21:56 | 200 |       656.5µs |             ::1 | GET      "/api/v1/book?category_name=Java"
[GIN] 2024/07/21 - 01:22:04 | 200 |      968.75µs |             ::1 | GET      "/api/v1/book?category_name=Javascript"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 16:47:11 | 200 |   13.680584ms |             ::1 | POST     "/api/v1/mentor/create"
[GIN] 2024/07/21 - 16:47:37 | 200 |    2.175375ms |             ::1 | GET      "/api/v1/mentor"
[GIN] 2024/07/21 - 16:48:03 | 200 |    6.230209ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:48:06 | 200 |    1.037416ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:48:37 | 200 |    2.455291ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:48:39 | 200 |    1.303333ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 16:48:46 | 200 |    2.088708ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:49:33 | 500 |      6.1185ms |             ::1 | PUT      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 16:51:38 | 200 |    6.909625ms |             ::1 | PUT      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:51:42 | 200 |         606µs |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:51:45 | 200 |    2.589833ms |             ::1 | PUT      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:51:48 | 200 |     735.542µs |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:52:21 | 200 |    4.100375ms |             ::1 | PUT      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:52:24 | 200 |    1.131208ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:53:23 | 200 |    2.134083ms |             ::1 | DELETE   "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f85f"
[GIN] 2024/07/21 - 16:53:30 | 200 |      677.25µs |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:53:31 | 200 |     637.459µs |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 16:53:40 | 500 |    8.480958ms |             ::1 | DELETE   "/api/v1/mentor/sdff"
[GIN] 2024/07/21 - 16:53:47 | 500 |     1.22775ms |             ::1 | DELETE   "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-776610jfdsjf"
[GIN] 2024/07/21 - 16:53:58 | 200 |    1.276333ms |             ::1 | DELETE   "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f856"
[GIN] 2024/07/21 - 16:54:12 | 200 |    1.797583ms |             ::1 | GET      "/api/v1/mentor"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 19:49:35 | 200 |    3.795875ms |             ::1 | DELETE   "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 19:49:37 | 200 |     871.666µs |             ::1 | GET      "/api/v1/mentor"
[GIN] 2024/07/21 - 19:49:51 | 400 |    1.348584ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
Error #01: 400	Mentor not found: record not found
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 19:52:16 | 404 |    1.829459ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
Error #01: 404	Mentor not found: 400	Mentor not found: record not found
[GIN] 2024/07/21 - 19:52:19 | 200 |     909.917µs |             ::1 | GET      "/api/v1/mentor"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 19:53:39 | 500 |    2.631791ms |             ::1 | GET      "/api/v1/mentor"
[GIN] 2024/07/21 - 19:53:41 | 500 |    2.416792ms |             ::1 | GET      "/api/v1/mentor"
[GIN] 2024/07/21 - 19:53:42 | 500 |     2.51325ms |             ::1 | GET      "/api/v1/mentor"
[GIN] 2024/07/21 - 19:53:44 | 404 |    2.823958ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
Error #01: 404	Mentor not found: 400	Mentor not found: record not found
[GIN] 2024/07/21 - 19:53:47 | 500 |    4.160583ms |             ::1 | POST     "/api/v1/mentor/create"
[GIN] 2024/07/21 - 19:53:52 | 500 |    2.666667ms |             ::1 | GET      "/api/v1/mentor"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 19:54:18 | 200 |    1.423834ms |             ::1 | GET      "/api/v1/mentor"
[GIN] 2024/07/21 - 19:54:22 | 404 |    2.069791ms |             ::1 | GET      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
Error #01: 404	Mentor not found: 400	Mentor not found: record not found
[GIN] 2024/07/21 - 19:54:28 | 400 |     774.375µs |             ::1 | PUT      "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
Error #01: 400	Mentor not found: record not found
[GIN] 2024/07/21 - 19:54:31 | 200 |    4.719625ms |             ::1 | DELETE   "/api/v1/mentor/10766e3e-cb5e-4163-b5a1-77661068f853"
[GIN] 2024/07/21 - 19:54:34 | 200 |     811.917µs |             ::1 | GET      "/api/v1/mentor"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 20:22:00 | 404 |         1.5µs |             ::1 | POST     "/api/v1/course_category/create"
[GIN] 2024/07/21 - 20:22:05 | 200 |    9.225167ms |             ::1 | POST     "/api/v1/course-category/create"
[GIN] 2024/07/21 - 20:22:34 | 200 |    1.312292ms |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:23:08 | 500 |   15.053833ms |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776a"
Error #01: record not found
[GIN] 2024/07/21 - 20:23:11 | 200 |     752.834µs |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
[GIN] 2024/07/21 - 20:24:01 | 200 |    7.602875ms |             ::1 | PUT      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
[GIN] 2024/07/21 - 20:24:03 | 200 |     577.209µs |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:24:34 | 200 |    2.983958ms |             ::1 | DELETE   "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
[GIN] 2024/07/21 - 20:24:37 | 200 |     697.791µs |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:24:41 | 500 |   14.887292ms |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
Error #01: record not found
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 20:25:57 | 404 |       2.079ms |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
Error #01: 404	User not found: record not found
[GIN] 2024/07/21 - 20:26:01 | 200 |    1.211416ms |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:26:02 | 200 |     540.625µs |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:26:04 | 404 |     712.417µs |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
Error #01: 404	User not found: record not found
[GIN] 2024/07/21 - 20:26:34 | 404 |    1.969042ms |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
Error #01: 404	User not found: record not found
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 20:26:42 | 404 |    2.059834ms |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
Error #01: 404	User not found: record not found
[GIN] 2024/07/21 - 20:26:46 | 200 |     823.041µs |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:26:58 | 404 |     902.667µs |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
Error #01: 404	User not found: record not found
[GIN] 2024/07/21 - 20:28:39 | 200 |    2.017709ms |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:28:41 | 200 |    2.818417ms |             ::1 | POST     "/api/v1/course-category/create"
[GIN] 2024/07/21 - 20:28:44 | 200 |     678.875µs |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:28:47 | 404 |      971.75µs |             ::1 | GET      "/api/v1/course-category/57f4afbf-633d-477d-a771-ab40f414776f"
Error #01: 404	User not found: record not found
[GIN] 2024/07/21 - 20:28:57 | 200 |     618.166µs |             ::1 | GET      "/api/v1/course-category/e9ed74e9-ae33-4ccf-a180-e56afa016e53"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 20:57:04 | 200 |    2.036875ms |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 20:57:16 | 404 |       1.417µs |             ::1 | POST     "/api/v1/course/create"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 20:59:09 | 200 |   21.851959ms |             ::1 | POST     "/api/v1/course/create"
[GIN] 2024/07/21 - 20:59:18 | 200 |   13.816125ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:05:18 | 400 |    1.548875ms |             ::1 | GET      "/api/v1/course"
Error #01: 400	No courses found: CategoryCourse: unsupported relations for schema Course
[GIN] 2024/07/21 - 21:05:24 | 400 |     532.709µs |             ::1 | GET      "/api/v1/course"
Error #01: 400	No courses found: CategoryCourse: unsupported relations for schema Course
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:06:29 | 200 |        7.59ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:12:14 | 200 |    4.897416ms |             ::1 | POST     "/api/v1/course/create"
[GIN] 2024/07/21 - 21:12:17 | 200 |    1.679792ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:13:53 | 400 |    6.438583ms |             ::1 | POST     "/api/v1/course/create"
Error #01: 400	Failed to insert course: ERROR: insert or update on table "courses" violates foreign key constraint "fk_courses_mentor" (SQLSTATE 23503)
[GIN] 2024/07/21 - 21:14:18 | 400 |   15.393542ms |             ::1 | POST     "/api/v1/course/create"
Error #01: 400	Failed to insert course: ERROR: insert or update on table "courses" violates foreign key constraint "fk_courses_mentor" (SQLSTATE 23503)
[GIN] 2024/07/21 - 21:14:53 | 200 |   12.897291ms |             ::1 | GET      "/api/v1/mentor"
[GIN] 2024/07/21 - 21:15:01 | 400 |    4.319917ms |             ::1 | POST     "/api/v1/course/create"
Error #01: 400	Failed to insert course: ERROR: insert or update on table "courses" violates foreign key constraint "fk_courses_mentor" (SQLSTATE 23503)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:15:47 | 400 |    9.910708ms |             ::1 | POST     "/api/v1/course/create"
Error #01: 400	Failed to insert course: ERROR: insert or update on table "courses" violates foreign key constraint "fk_courses_mentor" (SQLSTATE 23503)
[GIN] 2024/07/21 - 21:17:02 | 200 |      4.9705ms |             ::1 | POST     "/api/v1/mentor/create"
[GIN] 2024/07/21 - 21:17:04 | 200 |      861.75µs |             ::1 | GET      "/api/v1/mentor"
[GIN] 2024/07/21 - 21:17:19 | 400 |    2.887958ms |             ::1 | POST     "/api/v1/course/create"
Error #01: 400	Failed to insert course: ERROR: insert or update on table "courses" violates foreign key constraint "fk_courses_mentor" (SQLSTATE 23503)
[GIN] 2024/07/21 - 21:17:54 | 200 |    2.853375ms |             ::1 | GET      "/api/v1/course-category"
[GIN] 2024/07/21 - 21:18:15 | 200 |   39.128584ms |             ::1 | GET      "/api/v1/mentor/f3db5525-d69f-4384-9098-8f05ba03ffb1"
[GIN] 2024/07/21 - 21:18:29 | 200 |   16.366792ms |             ::1 | GET      "/api/v1/course-category/e9ed74e9-ae33-4ccf-a180-e56afa016e53"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:19:15 | 200 |    6.939084ms |             ::1 | POST     "/api/v1/course/create"
[GIN] 2024/07/21 - 21:19:18 | 200 |    2.353583ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:19:56 | 200 |    20.02575ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:20:28 | 200 |    3.776625ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:20:43 | 200 |    5.357584ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:21:19 | 200 |    2.688917ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/video/create      --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/video             --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 21:53:53 | 200 |    22.59275ms |             ::1 | POST     "/api/v1/video/create"
[GIN] 2024/07/21 - 21:54:28 | 200 |    5.587333ms |             ::1 | GET      "/api/v1/course"
[GIN] 2024/07/21 - 21:54:34 | 200 |    1.235375ms |             ::1 | GET      "/api/v1/video"
[GIN] 2024/07/21 - 21:55:06 | 200 |    3.868208ms |             ::1 | GET      "/api/v1/video/ee5c1e4b-078b-419b-8b83-d4ede1ac74ad"
[GIN] 2024/07/21 - 21:55:56 | 200 |    8.221125ms |             ::1 | PUT      "/api/v1/video/ee5c1e4b-078b-419b-8b83-d4ede1ac74ad"
[GIN] 2024/07/21 - 21:55:59 | 200 |     628.292µs |             ::1 | GET      "/api/v1/video"
[GIN] 2024/07/21 - 21:56:05 | 200 |    2.052125ms |             ::1 | PUT      "/api/v1/video/ee5c1e4b-078b-419b-8b83-d4ede1ac74ad"
[GIN] 2024/07/21 - 21:56:08 | 200 |     706.333µs |             ::1 | GET      "/api/v1/video"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/video/create      --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/video             --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 22:01:25 | 200 |   13.538333ms |             ::1 | GET      "/api/v1/video"
[GIN] 2024/07/21 - 22:01:37 | 200 |       9.277ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/video/create      --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/video             --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 22:02:22 | 200 |    5.465291ms |             ::1 | GET      "/api/v1/course"
[GIN] 2024/07/21 - 22:02:56 | 200 |    3.734875ms |             ::1 | GET      "/api/v1/course"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> github.com/kevinnaserwan/coursphere-api/internal/app.(*app).StartServer.func1 (4 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] POST   /api/v1/user/register     --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Register-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/login        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Login-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users        --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/user/users/:id    --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/resend-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).ResendOTPByEmail-fm (5 handlers)
[GIN-debug] POST   /api/v1/user/verify-otp   --> github.com/kevinnaserwan/coursphere-api/internal/controller/user.(*userController).VerifyAuthToken-fm (5 handlers)
[GIN-debug] POST   /api/v1/book-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Insert-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/all --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).GetByID-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/book_category.(*bookCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/book/create       --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/book              --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/book/:id          --> github.com/kevinnaserwan/coursphere-api/internal/controller/book.(*bookController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/mentor/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor            --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/mentor/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/mentor.(*mentorController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course-category/create --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category   --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course-category/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/coursecate.(*courseCategoryController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/create     --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/course            --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/course/:id        --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).Delete-fm (5 handlers)
[GIN-debug] POST   /api/v1/course/add-video/:id --> github.com/kevinnaserwan/coursphere-api/internal/controller/course.(*courseController).AddCourseVideos-fm (5 handlers)
[GIN-debug] POST   /api/v1/video/create      --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Create-fm (5 handlers)
[GIN-debug] GET    /api/v1/video             --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).GetAll-fm (5 handlers)
[GIN-debug] GET    /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).GetByID-fm (5 handlers)
[GIN-debug] PUT    /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Update-fm (5 handlers)
[GIN-debug] DELETE /api/v1/video/:id         --> github.com/kevinnaserwan/coursphere-api/internal/controller/video.(*videoController).Delete-fm (5 handlers)
[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.
Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.
[GIN-debug] Listening and serving HTTP on :5000
[GIN] 2024/07/21 - 22:17:40 | 200 |    4.758375ms |             ::1 | GET      "/api/v1/course"
[GIN] 2024/07/21 - 22:18:23 | 200 |    2.056792ms |             ::1 | GET      "/api/v1/video"
[GIN] 2024/07/21 - 22:18:30 | 200 |    8.446625ms |             ::1 | POST     "/api/v1/course/add-video/77e84c74-be2d-4fe5-80aa-64a09dba22c5"
[GIN] 2024/07/21 - 22:18:48 | 200 |    3.211083ms |             ::1 | GET      "/api/v1/course"
