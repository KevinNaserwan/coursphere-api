definitions:
  http.Error:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  http.Response:
    properties:
      message:
        type: string
      value: {}
    required:
    - message
    type: object
  request.CreateBookCategoryRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  request.CreateBookRequest:
    properties:
      book_file:
        type: string
      category_id:
        type: string
      language:
        type: string
      likes:
        type: integer
      overview:
        type: string
      rank:
        type: integer
      reading_time:
        type: integer
      title:
        type: string
      writer:
        type: string
    required:
    - book_file
    - category_id
    - language
    - likes
    - overview
    - rank
    - reading_time
    - title
    - writer
    type: object
  request.CreateCategoryCourseRequest:
    properties:
      name:
        type: string
    type: object
  request.CreateCourseRequest:
    properties:
      banner_image:
        type: string
      category_course_id:
        type: string
      category_id:
        type: string
      description:
        type: string
      lessons:
        type: integer
      mentor_id:
        type: string
      price:
        type: integer
      star:
        type: integer
      title:
        type: string
    type: object
  request.CreateMentorRequest:
    properties:
      experience:
        type: string
      image:
        type: string
      name:
        type: string
    type: object
  request.UpdateBookRequest:
    properties:
      book_file:
        type: string
      category_id:
        type: string
      language:
        type: string
      likes:
        type: integer
      overview:
        type: string
      rank:
        type: integer
      reading_time:
        type: integer
      title:
        type: string
      writer:
        type: string
    type: object
  request.UpdateCategoryCourseRequest:
    properties:
      name:
        type: string
    type: object
  request.UpdateCourseRequest:
    properties:
      banner_image:
        type: string
      category_course_id:
        type: string
      category_id:
        type: string
      description:
        type: string
      lessons:
        type: integer
      mentor_id:
        type: string
      price:
        type: integer
      star:
        type: integer
      title:
        type: string
    type: object
  request.UpdateMentorRequest:
    properties:
      experience:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
    type: object
  request.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.UserOTPVerifyRequest:
    properties:
      auth_code:
        type: string
      email:
        type: string
    required:
    - auth_code
    - email
    type: object
  request.UserRegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  response.AchievementResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  response.BookCategoryResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  response.BookResponse:
    properties:
      book_file:
        type: string
      category:
        items:
          $ref: '#/definitions/response.BookCategoryResponse'
        type: array
      id:
        type: string
      language:
        type: string
      likes:
        type: integer
      overview:
        type: string
      rank:
        type: integer
      reading_time:
        type: integer
      title:
        type: string
      writer:
        type: string
    required:
    - book_file
    - category
    - language
    - likes
    - overview
    - rank
    - reading_time
    - title
    - writer
    type: object
  response.CourseCategoryResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  response.CourseResponse:
    properties:
      banner_image:
        type: string
      category:
        $ref: '#/definitions/response.CourseCategoryResponse'
      description:
        type: string
      lessons:
        type: integer
      mentor:
        $ref: '#/definitions/response.MentorResponse'
      price:
        type: integer
      star:
        type: integer
      title:
        type: string
      videos:
        items:
          $ref: '#/definitions/response.VideoResponse'
        type: array
    type: object
  response.JwtToken:
    properties:
      token:
        example: SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
    type: object
  response.MentorResponse:
    properties:
      experience:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
    type: object
  response.UserAchievementResponse:
    properties:
      achievement:
        items:
          $ref: '#/definitions/response.AchievementResponse'
        type: array
      id:
        type: string
      user_id:
        type: string
    type: object
  response.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      profession:
        type: string
      user_achievement:
        items:
          $ref: '#/definitions/response.UserAchievementResponse'
        type: array
      username:
        type: string
    type: object
  response.VideoResponse:
    properties:
      id:
        type: string
      name:
        type: string
      time:
        type: string
      url:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: kevinnaserwan@gmail.com
    name: Coursphere API
paths:
  /book:
    get:
      consumes:
      - application/json
      description: Get All Books Endpoint
      parameters:
      - description: Category Name
        in: query
        name: category_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.BookResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get All Books
      tags:
      - Book
  /book-category/{ID}:
    get:
      consumes:
      - application/json
      description: Get Book Category By ID Endpoint
      parameters:
      - description: Book Category ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.BookCategoryResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get Book Category By ID
      tags:
      - Book Category
  /book-category/all:
    get:
      consumes:
      - application/json
      description: Get All Book Categories Endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.BookCategoryResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get All Book Categories
      tags:
      - Book Category
  /book-category/create:
    post:
      consumes:
      - application/json
      description: Create Book Category Endpoint
      parameters:
      - description: Create Book Category Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateBookCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Create Book Category
      tags:
      - Book Category
  /book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Book Endpoint
      parameters:
      - description: Book ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.BookResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Delete Book
      tags:
      - Book
    get:
      consumes:
      - application/json
      description: Get Book By ID Endpoint
      parameters:
      - description: Book ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.BookResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get Book By ID
      tags:
      - Book
    put:
      consumes:
      - application/json
      description: Update Book Endpoint
      parameters:
      - description: Book ID
        in: path
        name: ID
        required: true
        type: string
      - description: Update Book Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.BookResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Update Book
      tags:
      - Book
  /book/create:
    post:
      consumes:
      - application/json
      description: Create Book Endpoint
      parameters:
      - description: Create Book Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Create Book
      tags:
      - Book
  /course:
    get:
      consumes:
      - application/json
      description: Get All Courses Endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.CourseResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get All Courses
      tags:
      - Course
  /course/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Course Endpoint
      parameters:
      - description: Course ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Delete Course
      tags:
      - Course
    get:
      consumes:
      - application/json
      description: Get Course By ID Endpoint
      parameters:
      - description: Course ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.CourseResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get Course By ID
      tags:
      - Course
    put:
      consumes:
      - application/json
      description: Update Course Endpoint
      parameters:
      - description: Course ID
        in: path
        name: ID
        required: true
        type: string
      - description: Update Course Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Update Course
      tags:
      - Course
  /course/create:
    post:
      consumes:
      - application/json
      description: Create Course  Endpoint
      parameters:
      - description: Create Course  Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Create Course
      tags:
      - Course
  /course_category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Course Category Endpoint
      parameters:
      - description: Course Category ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Delete Course Category
      tags:
      - Course Category
    get:
      consumes:
      - application/json
      description: Get Course Category By ID Endpoint
      parameters:
      - description: Course Category ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.CourseCategoryResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get Course Category By ID
      tags:
      - Course Category
    put:
      consumes:
      - application/json
      description: Update Course Category Endpoint
      parameters:
      - description: Course Category ID
        in: path
        name: ID
        required: true
        type: string
      - description: Update Course Category Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCategoryCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Update Course Category
      tags:
      - Course Category
  /course_category/all:
    get:
      consumes:
      - application/json
      description: Get All Course Categories Endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.CourseCategoryResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get All Course Categories
      tags:
      - Course Category
  /course_category/create:
    post:
      consumes:
      - application/json
      description: Create Course Category Endpoint
      parameters:
      - description: Create Course Category Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateCategoryCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Create Course Category
      tags:
      - Course Category
  /mentor/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Mentor Endpoint
      parameters:
      - description: Mentor ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.MentorResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Delete Mentor
      tags:
      - Mentor
    get:
      consumes:
      - application/json
      description: Get Mentor By ID Endpoint
      parameters:
      - description: Mentor ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.MentorResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get Mentor By ID
      tags:
      - Mentor
  /mentor/all:
    get:
      consumes:
      - application/json
      description: Get All Mentors Endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.MentorResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get All Mentors
      tags:
      - Mentor
  /mentor/create:
    post:
      consumes:
      - application/json
      description: Create Mentor Endpoint
      parameters:
      - description: Create Mentor Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateMentorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Create Mentor
      tags:
      - Mentor
  /mentor/update:
    put:
      consumes:
      - application/json
      description: Update Mentor Endpoint
      parameters:
      - description: Update Mentor Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateMentorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.MentorResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Update Mentor
      tags:
      - Mentor
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User Endpoint
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User By ID Endpoint
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get User By ID
      tags:
      - User
  /user/all:
    get:
      consumes:
      - application/json
      description: Get All Users Endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  items:
                    $ref: '#/definitions/response.UserResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Get All Users
      tags:
      - User
  /user/create:
    post:
      consumes:
      - application/json
      description: Create User Endpoint
      parameters:
      - description: Create User Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Create User
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: Login User Endpoint
      parameters:
      - description: Login User Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.JwtToken'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Login User
      tags:
      - User
  /user/resend-otp:
    post:
      consumes:
      - application/json
      description: Resend Verification Email Endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Resend Verification Email
      tags:
      - User
  /user/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify User OTP Endpoint
      parameters:
      - description: Verify User OTP Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UserOTPVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                value:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: Verify User OTP
      tags:
      - User
securityDefinitions:
  AdminAuthorization:
    description: "Admin\tJwt Token Authorization"
    in: header
    name: Authorization
    type: apiKey
  UserAuthorization:
    description: "User \tJwt Token Authorization"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
